name: Manual Java Security Scan

on:
  workflow_dispatch:  # Manually triggered
permissions:
  contents: read
  issues: write  

jobs:
  codeql:
    name: CodeQL Static Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  semgrep:
    name: Semgrep Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/ci
          generateSarif: false
          runOptions: >-
            --output semgrep-report.html
            --output-format html

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-html-report
          path: semgrep-report.html

  dependency-check:
    name: OWASP Dependency-Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'java-app'
          path: './'
          format: 'HTML'

      - name: Upload Dependency Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report.html

  secret-scan:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Scan with TruffleHog
        uses: trufflesecurity/trufflehog@main
        continue-on-error: true

      - name: Run TruffleHog with JSON output
        run: |
         docker run --rm -v ${{ github.workspace }}:/repo ghcr.io/trufflesecurity/trufflehog:latest \
         filesystem /repo --json > trufflehog-report.json

      - name: Upload TruffleHog Report
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-json
          path: trufflehog-report.json

  zap-scan:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          
      - name: Install Docker Compose
        run: |
           sudo apt-get update
           sudo apt-get install -y docker-compose
           
      - name: Start Containers
        run: docker-compose --project-name tast-manager -f docker-compose.yml up --detach    

      - name: Build the app
        run: mvn clean package

      - name: Start the app in background
        run: |
          java -jar target/taskmanager-0.0.1-SNAPSHOT.jar --server.address=0.0.0.0 &
          sleep 20  # Wait for server to be ready

      - name: Wait for app to be ready
        run: |
          echo "Waiting for app to be ready..."
          for i in {1..10}; do
            curl -sSf http://localhost:8080/swagger-ui/index.html && echo "App is ready!" && exit 0
            sleep 5
          done
          echo "App not ready in time!" && exit 1

      - name: Prepare ZAP report files
        run: |
          touch report_html.html
          chmod a+w report_json.json report_md.md report_html.html

      - name: Run ZAP baseline scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:8080/swagger-ui/index.html'
          fail_action: false
          cmd_options: '-J report_json.json -w report_md.md -r report_html.html -a'

      - name: Upload ZAP HTML report
        uses: actions/upload-artifact@v4
        with:
          name: zap-html-report
          path: |
            report_html.html
            report_md.md
            report_json.json
